// middle ware
app.use((req, res, next) => {
    for (const key in req.body) {
        if (req.body.hasOwnProperty(key)) {
            req.body[key] = sanitize.value(req.body[key], 'string');
        }
    }
    next();
});

const express = require('express');
const bodyParser = require('body-parser');
const sanitize = require('sanitize');

const app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Middleware to sanitize req.body
app.use((req, res, next) => {
    req.body = sanitize(req.body);
    next();
});

app.post('/submit', (req, res) => {
    const sanitizedInput = req.bodyString('inputField');
    res.send(`Sanitized input: ${sanitizedInput}`);
});

app.listen(3000, () => {
    console.log('Server is running on port 3000');
});




const allowedDomains = ['example.com', 'another-trusted-site.com'];

function isValidUrl(url) {
    try {
        const parsedUrl = new URL(url);
        return allowedDomains.includes(parsedUrl.hostname);
    } catch (err) {
        return false;
    }
}

// Example URL
const url = 'https://example.com/api/usertoken/bi';
console.log(isValidUrl(url)); // Output: true
